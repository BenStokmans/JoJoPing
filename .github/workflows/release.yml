name: Build, Test and Release Poke

on:
    push:
        branches:
            - main

jobs:
    build-and-test:
        name: Build Swift App and Raycast Extension
        runs-on: macos-15
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Xcode
              uses: maxim-lobanov/setup-xcode@v1
              with:
                  xcode-version: latest-stable

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'
                  cache-dependency-path: 'poke-raycast/package-lock.json'

            - name: Install Raycast Extension Dependencies
              working-directory: poke-raycast
              run: npm ci

            - name: Build Swift App
              run: |
                  mkdir -p build
                  xcodebuild \
                    -project Poke.xcodeproj \
                    -scheme Poke \
                    -configuration Release \
                    -destination "generic/platform=macOS" \
                    -derivedDataPath build/DerivedData \
                    -archivePath build/Poke.xcarchive \
                    clean archive \
                    CODE_SIGN_STYLE=Manual \
                    CODE_SIGNING_ALLOWED=NO \
                    SKIP_INSTALL=NO \
                    BUILD_LIBRARY_FOR_DISTRIBUTION=NO

            - name: Export App from Archive
              run: |
                  mkdir -p build/Release
                  cp -R build/Poke.xcarchive/Products/Applications/Poke.app build/Release/

            - name: Build Raycast Extension
              working-directory: poke-raycast
              run: npm run build

            - name: Upload Swift App as Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: poke-app
                  path: build/Release/

            - name: Upload Raycast Extension as Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: raycast-extension
                  path: |
                      poke-raycast/package.json
                      poke-raycast/raycast-env.d.ts
                      poke-raycast/src/
                      poke-raycast/assets/

    create-release:
        name: Create release
        needs: build-and-test
        runs-on: ubuntu-latest
        permissions:
            contents: write           # To be able to publish a GitHub Release
            issues: write             # To be able to comment on related issues
            pull-requests: write      # To be able to comment on released pull requests
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install Semantic Release
              run: npm install semantic-release@24

            - name: Install Semantic Release Dependencies
              run: npm install @semantic-release/commit-analyzer@13 @semantic-release/release-notes-generator@14 @semantic-release/github@10 conventional-changelog-conventionalcommits@8

            - name: Configure Git user
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

            - name: Create and Publish Release
              id: create-release
              run: npx semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    upload-dmg:
        name: Upload DMG to GitHub Release
        needs: create-release
        runs-on: macos-15
        permissions: write-all
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Retrieve Swift App from artifact
              uses: actions/download-artifact@v4
              with:
                  name: poke-app
                  path: build/Release/

            - name: Get Latest Tag
              id: previoustag
              uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
              with:
                  fallback: v1.0.0

            - name: Create DMG
              run: |
                  mkdir -p build/Release
                  
                  # Check if we have the app from the artifact
                  if [[ -d "build/Release/Poke.app" ]]; then
                    echo "Using app from artifact"
                    APP_PATH="build/Release/Poke.app"
                  else
                      echo "App not found in expected location, listing contents:"
                      find build -name "*.app" -type d || true
                      exit 1
                  fi
                  
                  # Use the version from semantic release (strip the 'v' prefix if present)
                  SEMANTIC_VERSION="${{ steps.previoustag.outputs.tag }}"
                  VERSION="${SEMANTIC_VERSION#v}"
                  echo "Using semantic release version: $VERSION"
                  
                  # Update the app's Info.plist with the correct version
                  /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" \
                    "$APP_PATH/Contents/Info.plist" 2>/dev/null || \
                  /usr/libexec/PlistBuddy -c "Add :CFBundleShortVersionString string $VERSION" \
                    "$APP_PATH/Contents/Info.plist"
                  
                  echo "Updated app version to: $VERSION"
                  
                  DMG_NAME="Poke-${VERSION}.dmg"
                  DMG_PATH="build/$DMG_NAME"
                  
                  STAGE="build/dmg_stage"
                  rm -rf "$STAGE"
                  mkdir -p "$STAGE"
                  
                  # Add Applications symlink
                  ln -s /Applications "$STAGE/Applications"
                  
                  # Copy app into staging
                  cp -R "$APP_PATH" "$STAGE/"
                  
                  # Ensure executable has proper permissions
                  chmod +x "$STAGE/Poke.app/Contents/MacOS/Poke"
                  
                  # Create the DMG
                  echo "Creating DMG: $DMG_PATH"
                  rm -f "$DMG_PATH"
                  hdiutil create \
                    -volname "Poke" \
                    -srcfolder "$STAGE" \
                    -fs HFS+J \
                    -format UDZO \
                    "$DMG_PATH"
                  
                  echo "DMG created at: $DMG_PATH"

            - name: Upload DMG to release
              uses: softprops/action-gh-release@v2
              with:
                  files: build/*.dmg
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag_name: ${{ steps.previoustag.outputs.tag }}
                  append_body: true

    upload-raycast-extension:
        name: Upload Raycast Extension to GitHub Release
        needs: create-release
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Retrieve Raycast Extension from artifact
              uses: actions/download-artifact@v4
              with:
                  name: raycast-extension
                  path: raycast-dist/

            - name: Get Latest Tag
              id: previoustag
              uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
              with:
                  fallback: v1.0.0

            - name: Create Raycast Extension ZIP
              run: |
                  cd raycast-dist
                  zip -r ../poke-raycast-${{ steps.previoustag.outputs.tag }}.zip .

            - name: Upload Raycast Extension to release
              uses: softprops/action-gh-release@v2
              with:
                  files: poke-raycast-${{ steps.previoustag.outputs.tag }}.zip
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag_name: ${{ steps.previoustag.outputs.tag }}
                  append_body: true
